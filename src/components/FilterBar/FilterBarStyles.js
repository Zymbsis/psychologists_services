export const styles = {
  control: (styles, state) => ({
    ...styles,
    width: 226,
    height: 48,
    borderRadius: 14,
    backgroundColor: '#54BE96',
    padding: 0,
    border: 'none',
    boxShadow: state.isFocused && 'none',
    cursor: 'pointer',
    transition: 'background-color 300ms ease-in',
    '&:hover': {
      backgroundColor: '#36A379',
    },
  }),
  indicatorSeparator: () => ({ display: 'none' }),
  dropdownIndicator: (styles, state) => ({
    ...styles,
    color: '#FBFBFB',
    cursor: 'pointer',
    transition: 'transform 300ms ease-in',
    padding: '14px 18px',
    transform: state.selectProps.menuIsOpen ? 'rotate(0)' : 'rotate(180deg)',
    '&:hover': {
      color: '#FBFBFB',
    },
  }),
  valueContainer: (style) => ({
    ...style,
    padding: '0 0 0 18px',
  }),
  singleValue: (style) => ({
    ...style,
    color: '#FBFBFB',
    fontSize: 16,
    fontWeight: 500,
    margin: 0,
  }),
  menu: (style) => ({
    ...style,
    marginTop: '8px',
    marginBottom: 0,
    width: 226,
    padding: '10px 18px',
    borderRadius: '14px',
    backgroundColor: '#FFF',
    border: 'none',
    boxShadow: '0px 20px 69px 0px rgba(0, 0, 0, 0.07)',
  }),
  menuList: (style) => ({
    ...style,
    padding: 0,
  }),
  option: (style, state) => ({
    ...style,
    backgroundColor: state.isFocused ? '#FFF' : '#FFF',
    padding: '4px 0 4px 0',
    cursor: 'pointer',
    transition: 'all 300ms ease-in',
    color: state.isSelected ? '#191A15' : 'rgba(25, 26, 21, 0.30)',
    fontSize: 16,
    lineHeight: 1.25,
    '&:hover': {
      color: state.isSelected ? 'rgba(25, 26, 21, 0.80)' : '#8A8A89',
      backgroundColor: state.isFocused ? '#FFF' : '#FFF',
    },
  }),
};
